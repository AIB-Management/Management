<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdaib.mapper.UsersMapper">

    <!--AccountInfo的动态sql-->
    <sql id="AccountInfo_s">
        <!-- 判断语句,如果id里面没值就不添加id-->
        <if test="id != null and id != ''">
            and id = #{id}
        </if>
        <if test="username != null and username != ''">
            and username = #{username}
        </if>
        <if test="name != null and name != ''">
            and name = #{name}
        </if>
        <if test="mail != null and mail != ''">
            and mail = #{mail}
        </if>
        <if test="departmentId != null and departmentId != ''">
            and departmentId = #{departmentId}
        </if>
        <if test="depContent != null and depContent != ''">
            and depContent = #{depContent}
        </if>
        <if test="professionId != null and professionId != ''">
            and professionId = #{professionId}
        </if>
        <if test="content != null and content != ''">
            and content = #{content}
        </if>
    </sql>


    <!--根据用户名找到用户-->
    <select id="selectByUsername" parameterType="string" resultType="account">
        SELECT * FROM `t_account` WHERE username = #{account}
    </select>


    <!--帐号是否存在-->
    <select id="findUsernameIsExists" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM `t_account` WHERE username = #{account}
    </select>

    <!--插入用户信息-->
    <select id="insertUserFromAccount" parameterType="RegisterPojo">
        INSERT INTO `t_account`(username,PASSWORD,name,mail,profession_id) VALUES(#{username},#{pwd},#{name},#{email},#{specialId})
    </select>

    <!--得到所有系-->
    <select id="findDepartment" resultType="Department">
        SELECT id,department FROM `t_department` WHERE id != 1
    </select>


    <!--根据系id找到相应的专业-->
    <select id="findProfessionById" parameterType="int" resultType="Profession">
        SELECT id,department_id,profession FROM `t_profession` WHERE department_id = #{id}
    </select>


    <!--帐号是否存在-->
    <select id="findEmailIsExists" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM `t_account` WHERE mail = #{account}
    </select>

    <!--帐号和邮箱是否存在-->
    <select id="findEmailAndUsernameIsExists" parameterType="Account" resultType="int">
        SELECT COUNT(*) FROM `t_account` WHERE mail = #{mail} and username = #{username}
    </select>

    <!--更改修改时间和UUID-->
    <update id="updateCodeAndDate" parameterType="Account">
        UPDATE `t_account` SET
        <if test="validatacode != null and outdate != null">
            validataCode = #{validatacode},outDate=#{outdate}
        </if>
        <if test="validatacode != null and outdate == null">
            validataCode = #{validatacode}
        </if>
        WHERE username = #{username}
    </update>

    <!--得到用户的超时时间-->
    <select id="findOutDateByAccount" parameterType="String" resultType="date">
        SELECT outDate FROM `t_account` WHERE username = #{username}
    </select>

    <!--修改密码-->
    <update id="updatePassword" parameterType="Account">
        UPDATE `t_account` SET password = #{password}WHERE username = #{username}
    </update>

    <select id="findAccountInfoByUsername" parameterType="String" resultType="AccountInfo">
        SELECT * FROM `v_account_info` WHERE username = #{username}
    </select>

    <select id="findAccountInfoByCharacter" parameterType="String" resultType="AccountInfo">
        SELECT
          v_account_info.id,
          v_account_info.username,
          v_account_info.profession,
          v_account_info.department,
          v_account_info.`character`
        FROM
          v_account_info
        WHERE
          v_account_info.`character` = #{character}
    </select>

    <!--找到该系的所有教师-->
    <select id="findUsernameByDeparentId" parameterType="Map" resultType="com.gdaib.pojo.AccountInfo">
        SELECT a.id,a.name FROM `v_account_info` a WHERE department_id = #{department_id} AND role = 'teacher'
        <if test="accounts != null and accounts.size() != 0">
            <foreach collection="accounts" item="account" open="and id not in(" close=")" separator=",">
                #{account.id}
            </foreach>
        </if>
    </select>

    <!--得到用户被别人授权的身份-->
    <select id="findBeAccountName" parameterType="String" resultType="com.gdaib.pojo.AccountInfo">
        SELECT a.id,a.name FROM `t_account` a,`t_mapping_ugom` m WHERE a.`username` = m.`account` AND be_acco = #{be_acco}

    </select>

    <!--得到用户授权给别人的身份-->
    <select id="findAccountName" parameterType="String" resultType="com.gdaib.pojo.AccountInfo">
        SELECT a.id,a.name FROM `t_account` a,`t_mapping_ugom` m WHERE a.`username` = m.`be_acco` AND m.`account` = #{account}
    </select>


    <!--AccountInfo-->
    <select id="findAccountInfo" parameterType="com.gdaib.pojo.AccountInfo" resultType="com.gdaib.pojo.AccountInfo">
    SELECT
      `t_account`.`id`         AS `id`,
      `t_account`.`username`   AS `username`,
      `t_account`.`name`       AS `name`,
      `t_account`.`mail`       AS `mail`,
      `t_account`.`role`       AS `role`,
      `t_department`.`parent`  AS `departmentId`,
      (SELECT
         `t_department`.`content`
       FROM `t_department`
       WHERE (`t_department`.`id` = `departmentId`)) AS `depContent`,
      `t_department`.`uid`     AS `professionId`,
      `t_department`.`content` AS `content`
    FROM (`t_account`
       JOIN `t_department`
         ON ((`t_account`.`depUid` = `t_department`.`uid`)))
    <where>
        <include refid="AccountInfo_s"/>
    </where>

    </select>



</mapper>