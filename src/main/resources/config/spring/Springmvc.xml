<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd "
>

    <!--全局异常处理器
        只要实现了HandlerExceptionResolver接口，Spring就会知道他是一个全局异常处理器，项目只能有一个，所以我们直接配一个bea
        n就好了
    -->
    <bean class="com.gdaib.Exception.GlobalExceptionResolver"/>

    <!--4. 开启aop对类代理-->
    <aop:config proxy-target-class="true"/>

    <!--
            批量扫描
            可以扫描controller、service... 这里扫描controller，指定controller的包
    -->

    <context:component-scan base-package="com.gdaib.controller"></context:component-scan>


    <!--注解映射器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->

    <!--注解适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->

    <!--使用mvc:annotation-driven代替上面的注解映射器和注解适配器
        mvc:annotation-driven默认加载了很多参数绑定方法，
        比如json转换解析器就默认加载了，如果使用了mvc:annotation-driven，就不要配置上面的RequestMappingHandlerAdapter和
        RequestMappingHandlerMapping
    -->
    <mvc:annotation-driven>
        <!--配置json-->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion">
                            <!--属性为NULL 不序列化-->
                            <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--加上这个标签之后，如果找不到页面的话，会去查找静态内容-->
    <mvc:default-servlet-handler/>


    <!--视图解析器-->
    <!--解析jsp，默认支持jstl，classpath要有jstl的包-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--配置jsp路径的前缀，那样子我们在文件里面写jsp的时候就可以直接写名字，不用写这个路径-->
        <property name="prefix" value="/WEB-INF/jsps/"/>
        <!--配置jsp路径的后缀-->
        <!--
        <property name="suffix" value=".jsp"/>
        -->
    </bean>





    <!-- 上传文件的设置 ，maxUploadSize=-1，表示无穷大。uploadTempDir为上传的临时目录 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
    >
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="-1"/>
        <property name="uploadTempDir" value="/TeachersFile/cache"/>

    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.gdaib.filter.CacheInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


</beans>